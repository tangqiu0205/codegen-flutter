class {{classname}} {
  {{#vars}}
      {{#description}}
  /// {{{description}}}
      {{/description}}
      {{#allowableValues}}
          {{#min}}
  /// range from {{min}} to {{max}}
          {{/min}}
  /// {{^min}}enum {{name}}Enum { {{#values}} {{.}}, {{/values}} };{{/min}}
      {{/allowableValues}}
  {{{datatype}}}? {{name}};
  {{/vars}}
  {{classname}}();

  @override
  String toString() {
    return '{{classname}}[{{#vars}}{{name}}=${{name}}, {{/vars}}]';
  }

  {{classname}}.fromJson(dynamic json) {
    if (json == null) return;
  {{#vars}}
  {{#if isDateTime}}
    {{name}} = json['{{baseName}}'] == null ? null : DateTime.parse(json['{{baseName}}']);
  {{else if isDate}}
    {{name}} = json['{{baseName}}'] == null ? null : DateTime.parse(json['{{baseName}}']);
  {{else}}
    {{#complexType}}
      {{#isListContainer}}
    {{name}} = {{complexType}}.listFromJson(json['{{baseName}}']);
      {{/isListContainer}}
      {{^isListContainer}}
        {{#isMapContainer}}
    {{name}} = {{complexType}}.mapFromJson(json['{{baseName}}']);
        {{/isMapContainer}}
        {{^isMapContainer}}
    {{name}} = {{complexType}}.fromJson(json['{{baseName}}']);
        {{/isMapContainer}}
      {{/isListContainer}}
    {{/complexType}}
    {{^complexType}}
      {{#isListContainer}}
    {{name}} = json['{{baseName}}'] == null ? null : (json['{{baseName}}'] as List).map((item) => item as {{items.datatype}}).toList();
      {{/isListContainer}}
      {{^isListContainer}}
        {{#isDouble}}
    {{name}} = json['{{baseName}}'] == null ? null : json['{{baseName}}'].toDouble();
        {{/isDouble}}
        {{^isDouble}}
    {{name}} = json['{{baseName}}'];
        {{/isDouble}}
      {{/isListContainer}}
    {{/complexType}}
  {{/if}}
  {{/vars}}
  }

  Map<String, dynamic> toJson() {
    return {
    {{#vars}}
      {{#isDateTime}}'{{baseName}}': {{name}} == null ? '' : {{name}}!.toUtc().toIso8601String(){{^@last}},{{/@last}}{{/isDateTime}}{{^isDateTime}}'{{baseName}}': {{name}}{{^@last}},{{/@last}}{{/isDateTime}}
    {{/vars}}
     };
  }

  static List<{{classname}}> listFromJson(List<dynamic>? json) {
    return json == null ? <{{classname}}>[] : json.map((value) => new {{classname}}.fromJson(value)).toList();
  }

  static Map<String, {{classname}}> mapFromJson(Map<String, dynamic>? json) {
    var map = new Map<String, {{classname}}>();
    if (json != null && json.length > 0) {
      json.forEach((String key, dynamic value) => map[key] = new {{classname}}.fromJson(value));
    }
    return map;
  }
}
